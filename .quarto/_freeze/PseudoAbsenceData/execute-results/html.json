{
  "hash": "8c4f9dcdd6f37d1ada653d61fde88af3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Background & pseudo-absence data\"\nformat: html\neditor: visual\ndraft: true\n---\n\n\n::: {.cell}\n\n:::\n\n\nSpecies distribution modelling (SDM) relies on comparing where a species occurs to where it does not, yet in practice **true absence data are extremely difficult to obtain**. In most biodiversity databases such GBIF, the records available are presence-only. Demonstrating a true absence requires very intensive sampling: for plants, complete and repeated inventories across large areas; for birds and other mobile or cryptic animals, repeated visits of the sampling plot. Even with rigorous protocols, imperfect detection means that non-detections can represent false negatives rather than genuine absences. Because systematic presence–absence surveys are rare, ecologists frequently turn to background or pseudo-absence data to make presence-only datasets usable in SDM. These data do not attempt to identify where a species is truly absent, but instead provide a contrast set of conditions against which the environments of presences can be evaluated. In this sense, background data characterise the environmental or geographic domain of the study, while presences identify where within that domain the species has been observed.\n\nOver the past decade, numerous approaches have been developed for generating background or pseudo-absence data. Early methods focused on simple random sampling of points across a study region, or on excluding presence cells. More recent advances emphasise accounting for spatial sampling bias (e.g., target-group selection, bias weighting) and ecological representativeness (e.g., sampling in environmental space). These innovations recognise that poorly chosen background data can bias response curves, inflate model accuracy, and limit transferability. State-of-the-art methods now include hybrid strategies that combine geographic, environmental, and effort-based information, as well as point process frameworks that embed background generation into a statistically principled likelihood. Despite this progress, there is still no universal solution: the most appropriate strategy depends on study goals, data sources, and the ecological processes under investigation.\n\nWe will look at two major ways of creating background/pseudo-absence data: • random selection of points within study area • accounting for spatial sampling bias using target-group selection\n\n<br>\n\n::: {.callout-note collapse=\"true\" icon=\"lightbulb\"}\n### Why true absence data are so difficult to obtain\n\nImperfect detectability and survey effort. A non-detection at a site does not imply true absence; detectability varies with observer skill, time of day/season, survey method and effort. Many occurrence databases (e.g., opportunistic citizen science or museum records) lack repeat surveys that would allow occupancy/detection modelling.\n\nSampling bias. Areas that are more accessible, near roads, near research stations or urban centres tend to be oversampled. That produces presence records that reflect observer effort rather than the species' true ecological niche.\n\nScale mismatch. True absence at one spatial grain (e.g., 1 km) may be false at a finer grain (microhabitat), which complicates how absence is defined relative to predictors.\n\nLogistical & cost constraints. Systematic presence-absence surveys are expensive and rarely available for many taxa and regions; hence reliance on presence-only data is common in applied SDMs.\n\nThese limitations motivate careful design of background/pseudo-absence strategies so that the data used for \"absence\" (or availability) reflect the ecological process of interest (and do not simply encode observer bias).\n:::\n\n<br>\n\n## 1. Random selection of points within study area\n\nBelow, we demonstrate how to generate random background points within the spatial extent of the UK using `terra` and `sf`. We will then visualise the presence points for *Rhinolophus hipposideros* together with these background points.\n\n**Define study area and presence points**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# UK boundary (sf object)\nstudy_area <- UK_sf\n\n# Cleaned occurrence points for Rhinolophus hipposideros (convert to sf)\n# Requires to generate occ_rhinhipp_cleaned in page \"Species data\npresence_sf <- occ_rhinhipp_cleaned %>%\n  # Select only the columns key, decimalLatitude, decimalLongitude\n  dplyr::select(species, key, decimalLatitude, decimalLongitude) %>%\n  # Remove records with missing coordinates\n  filter(!is.na(decimalLongitude), !is.na(decimalLatitude)) %>%\n  # convert to sf object\n  sf::st_as_sf(coords = c(\"decimalLongitude\", \"decimalLatitude\"), crs = 4326)\n\n# Check the number of presence points\nn_presence <- nrow(presence_sf)\nn_presence\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 355\n```\n\n\n:::\n:::\n\n\n### 1.1 Generate random background points\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2222)  # for reproducibility\n\n# Number of background points to generate (commonly 1-10x presence points)\nn_background <- n_presence\n\n# Generate random points within UK polygon using sf::st_sample\nbackground_points <- sf::st_sample(study_area, size = n_background, type = \"random\")\n\n# Convert to sf object with POINT geometry\nbackground_sf <- st_sf(geometry = background_points)\n\n# Assign an ID for plotting/analysis\nbackground_sf <- background_sf %>%\n  mutate(type = \"background\")\n\npresence_sf <- presence_sf %>%\n  mutate(type = \"presence\")\n```\n:::\n\n\n**Visualize presence and background points on the UK map**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = study_area, fill = \"gray95\", color = \"black\") +\n  geom_sf(data = background_sf, aes(color = type, shape = type), alpha = 0.3, size = 1) +\n  geom_sf(data = presence_sf, aes(color = type, shape = type), size = 1.5) +\n  scale_color_manual(\n    name = \"Point type\",\n    values = c(\"background\" = \"#1f78b4\", \"presence\" = \"#6a3d9a\")\n  ) +\n  scale_shape_manual(\n    name = \"Point type\",\n    values = c(\"background\" = 16, \"presence\" = 17)\n  ) +\n  labs(\n    title = \"Presence and random background points\",\n    subtitle = \"Background points randomly sampled within UK boundary\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 11),\n    legend.position = \"right\"  # show legend on the right\n  )\n```\n\n::: {.cell-output-display}\n![](PseudoAbsenceData_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### 1.2 Spatially constrained background points\n\nRandomly selecting background points across the entire study area can lead to biased models, especially when occurrence data are not evenly distributed. Presence records often cluster in areas with higher accessibility or sampling effort, which may not represent the species' actual habitat preferences. By spatially constraining background points to be near presence records, we ensure that the background data reflect the same spatial biases as the presence data, leading to more accurate and ecologically meaningful models. This method has been highlighted as a robust approach to mitigate spatial sampling bias in SDMs. For instance, Barve et al. (2011) discussed how spatially constrained background sampling can improve model performance by aligning the background data distribution with that of the presence data.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(ggplot2)\n\n# Define buffer distance (to be used around presence points)\nbuffer_dist = 5000\n\n# Define a function to generate background points near presence points\n# Define a function to generate background points near presence points\ngenerate_background_constr <- function(presence_sf, study_area, buffer_distance, n_points) {\n  # Create a buffer around each presence point\n  presence_buffer <- sf::st_buffer(presence_sf, dist = buffer_distance)\n  \n  # Combine all buffers into a single geometry\n  combined_buffer <- sf::st_union(presence_buffer)\n  combined_buffer <- sf::st_make_valid(combined_buffer)\n  \n  # Intersect buffer with study area to constrain background to that zone\n  constrained_area <- sf::st_intersection(combined_buffer, study_area)\n  \n  # Generate random points within the constrained area\n  background_points <- sf::st_sample(constrained_area, size = n_points, type = \"random\")\n  \n  # Convert to sf object with same CRS\n  background_sf <- sf::st_sf(geometry = background_points, crs = sf::st_crs(presence_sf))\n  \n  return(background_sf)\n}\n\n# Generate spatially constrained background points\nbackground_constr_sf <- generate_background_constr(presence_sf, study_area, buffer_dist, n_background)\n\n# Visualize the presence and spatially contrained background points\nggplot() +\n  geom_sf(data = study_area, fill = \"gray95\", color = \"black\") +\n  geom_sf(data = presence_sf, aes(color = \"Presence\"), size = 1.5, shape = 17) +\n  geom_sf(data = background_constr_sf, aes(color = \"Background\"), alpha = 0.3, size = 1) +\n  scale_color_manual(values = c(\"Presence\" = \"#6a3d9a\", \"Background\" = \"#1f78b4\")) +\n  labs(\n    title = \"Presence and Spatially Constrained Background Points for Rhinolophus hipposideros\",\n    subtitle = \"Background points generated within 5 km of presence records\",\n    color = \"Point Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 11)\n  )\n```\n\n::: {.cell-output-display}\n![](PseudoAbsenceData_files/figure-html/spatially-constrained-background-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## 2. Accounting for spatial sampling bias using target-group selection\n\nThe spatial distribution of species observations is often driven more by **where observers go** than by where the species truly occurs. This leads to spatial sampling bias, which — if uncorrected — can distort species distribution models (SDMs). One effective strategy to mitigate this is **target-group background selection**. This method uses presence records of **other species** from the same group (e.g., all bats) that were collected using the same methods and sources (e.g., GBIF, citizen science) to approximate the same sampling bias.\n\nThe idea is simple: assume that the observer effort captured in the presence data of the target group reflects the same biases as for your focal species. Using this \"effort surface\" as background allows models to distinguish environmental preferences of the species from spatial artefacts of data collection.\n\nWe now generate background points for *Rhinolophus hipposideros* using other GBIF records for UK bats as the target group.\n\n#### Define target group species\n\nWe define the target group as **all bat species** recorded in Great Britain. You can adapt this list depending on your study needs.\n\n::: {.callout-note collapse=\"true\"}\n### Code to generate the target group species background points (already done in data preparation)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rgbif)\n\n# Define target group (Chiroptera = bats)\nbat_taxon_key <- name_backbone(name = \"Chiroptera\")$usageKey\n\n# Download bat occurrence records from GBIF\nbat_occ <- rgbif::occ_search(\n  taxonKey = bat_taxon_key,\n  country = \"GB\",\n  hasCoordinate = TRUE,\n  limit = 2000  # increase if needed, but beware GBIF limits\n)\n\n# Extract data\nbat_df <- bat_occ$data\n\n# Remove records for the focal species (Rhinolophus hipposideros)\ntarget_group_df <- bat_df %>%\n  filter(!species %in% \"Rhinolophus hipposideros\") %>%\n  filter(!is.na(decimalLongitude), !is.na(decimalLatitude)) %>%\n  dplyr::select(species, decimalLatitude, decimalLongitude)\n\n# Convert to sf object\ntarget_group_sf <- st_as_sf(\n  target_group_df,\n  coords = c(\"decimalLongitude\", \"decimalLatitude\"),\n  crs = 4326\n)\n```\n:::\n\n\nThese steps are included in the data preparation file:\\\n👉 [View full data preparation script](data_prep.qmd)\n:::\n\n<br>\n\n#### Visualise target group background points\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check how many background records we have\nnrow(target_group_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9715\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot target-group background vs presence points\nggplot() +\n  geom_sf(data = study_area, fill = \"gray95\", color = \"black\") +\n  geom_sf(data = presence_sf, aes(color = \"Presence\"), size = 2, shape = 17) +\n  geom_sf(data = target_group_sf, aes(color = \"Target group background\"), size = 1, alpha = 0.6) +\n  scale_color_manual(values = c(\"Presence\" = \"#6a3d9a\", \"Target group background\" = \"#33a02c\")) +\n  labs(\n    title = \"Presence and Target Group Background Points\",\n    subtitle = \"Target-group: Other bat species recorded in the UK (GBIF)\",\n    color = \"Point Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 11)\n  )\n```\n\n::: {.cell-output-display}\n![](PseudoAbsenceData_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n### When to use target-group background?\n\nTarget-group background is especially useful when: - Presence data are from opportunistic, bias-prone sources like GBIF or citizen science. - The focal species is part of a well-studied taxonomic group with sufficient records. - You want to reduce the impact of spatial sampling effort on model results.\n\nIt works best when the target group was sampled using the same methods, in the same places, and during the same time as the focal species. Poorly matched target groups can **worsen** bias, so always inspect their spatial distribution.\n:::\n\n::: {.callout-important collapse=\"true\" icon=\"clipboard\"}\n### The choice to make...\n\nThere is no single \"best\" pseudo-absence or background approach that universally fits all objectives and applications. Good practice is to (1) understand your data and sampling process, (2) choose background/pseudo-absence strategies that emulate sampling or maximally inform the species-environment contrast relevant to your question, and (3) evaluate sensitivity across plausible alternatives while using spatially aware evaluation. The recent literature strongly favours bias-aware (target-group / weighted) and environmental-space approaches, and pushes toward methods that explicitly model sampling intensity or treat presences as a point process for principled inference.\n:::\n\n<br>\n\n## 3. Join data (species presence, background/pseudo-absence, environmental data)\n\nTo model species-environment relationships, we need to combine the **species data** (presence and background/pseudo-absence points) with the **environmental data** (climate, elevation, etc.). This involves extracting raster values at point locations and joining these with species labels (`1` for presence, `0` for background/pseudo-absence).\n\nWe’ll extract the environmental predictors from the following rasters: - `Clim_UK`: Bioclimatic variables from WorldClim - `Elev_UK`: Elevation at 30 arc-second resolution\n\nThese predictors will be joined to: - `presence_sf`: Points where *Rhinolophus hipposideros* was observed - `target_group_sf`: Target-group background points from other bat species\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(sf)\n\n# Use the stacked climate and elevation data generated in the page \"Envionmental Data\"\nenv_stack <- Env_UK_stack\n\n# Extract environmental values at presence points\nenv_pres <- terra::extract(env_stack, vect(presence_sf)) %>%\n  dplyr::select(-ID)  # Remove ID column returned by extract\n\n# Combine with presence points\npresence_data <- presence_sf %>%\n  mutate(pa = 1) %>%  # 1 = presence\n  bind_cols(env_pres)\n\n# Extract environmental values at background points\nenv_back <- terra::extract(env_stack, vect(background_sf)) %>%\n  dplyr::select(-ID)\n\n# Combine with background points\nbackground_data <- background_sf %>%\n  mutate(pa = 0) %>%  # 0 = pseudo-absence\n  bind_cols(env_back)\n\n# Combine presence + background into one dataset for modelling\nsdm_data <- bind_rows(presence_data, background_data)\n\n# Drop geometry for model matrix if needed\nsdm_df <- st_drop_geometry(sdm_data)\n\n# Drop rows wit NA in covariates\nsdm_df_clean <- sdm_df %>%\n  drop_na(starts_with(\"bio_\"), elevation)\n\n# Preview\nhead(sdm_df_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 24\n  species      key   type     pa bio_1 bio_2 bio_3 bio_4 bio_5 bio_6 bio_7 bio_8\n  <chr>        <chr> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Rhinolophus… 5105… pres…     1  8.85  7.55  38.3  442.  20.1 0.382  19.7  4.78\n2 Rhinolophus… 5105… pres…     1  8.77  6.22  34.4  441.  19.0 0.853  18.1  4.84\n3 Rhinolophus… 5105… pres…     1  8.65  6.41  35.3  436.  18.8 0.665  18.1  4.76\n4 Rhinolophus… 5069… pres…     1  9.84  6.29  37.4  393.  19.1 2.33   16.8  8.31\n5 Rhinolophus… 5105… pres…     1  9.09  6.56  35.4  441.  19.5 1.02   18.5  5.13\n6 Rhinolophus… 5152… pres…     1  8.57  6.20  34.7  433.  18.6 0.727  17.9  4.74\n# ℹ 12 more variables: bio_9 <dbl>, bio_10 <dbl>, bio_11 <dbl>, bio_12 <dbl>,\n#   bio_13 <dbl>, bio_14 <dbl>, bio_15 <dbl>, bio_16 <dbl>, bio_17 <dbl>,\n#   bio_18 <dbl>, bio_19 <dbl>, elevation <dbl>\n```\n\n\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\" icon=\"lightbulb\"}\n### Readings\n\nBaker, D. J., Maclean, I. M. D., & Gaston, K. J. (2024). Effective strategies for correcting spatial sampling bias in species distribution models without independent test data. Diversity and Distributions, 30(3), e13802. doi:https://doi.org/10.1111/ddi.13802\n\nBarber, R. A., Ball, S. G., Morris, R. K. A., & Gilbert, F. (2022). Target-group backgrounds prove effective at correcting sampling bias in Maxent models. Diversity and Distributions, 28(1), 128–141. doi:https://doi.org/10.1111/ddi.13442 Barbet-Massin, M., Jiguet, F., Albert, C. H., & Thuiller, W. (2012). Selecting pseudo-absences for species distribution models: how, where and how many? Methods in Ecology and Evolution, 3(2), 327–338. doi:10.1111/j.2041-210X.2011.00172.x\n\nBroussin, J., Mouchet, M., & Goberville, E. (2024). Generating pseudo-absences in the ecological space improves the biological relevance of response curves in species distribution models. Ecological Modelling, 498, 110865. doi:https://doi.org/10.1016/j.ecolmodel.2024.110865\n\nDa Re, D., Tordoni, E., Lenoir, J., Lembrechts, J. J., Vanwambeke, S. O., Rocchini, D., & Bazzichetto, M. (2023). USE it: Uniformly sampling pseudo-absences within the environmental space for applications in habitat suitability models. Methods in Ecology and Evolution, 14(11), 2873–2887. doi:https://doi.org/10.1111/2041-210X.14209\n\nKneib, T., Muller, J., & Hothorn, T. (2008). Spatial smoothing techniques for the assessment of habitat suitability. Environmental and Ecological Statistics, 15(3), 343–364. doi:10.1007/s10651-008-0092-x\n\nKramer-Schadt, S., Niedballa, J., Pilgrim, J. D., Schröder, B., Lindenborn, J., Reinfelder, V., . . . Wilting, A. (2013). The importance of correcting for sampling bias in MaxEnt species distribution models. Diversity and Distributions, 19(11), 1366–1379. doi:https://doi.org/10.1111/ddi.12096\n\nPhillips, S. J., Dudík, M., Elith, J., Graham, C. H., Lehmann, A., Leathwick, J., & Ferrier, S. (2009). Sample selection bias and presence-only distribution models: Implications for background and pseudo-absence data. Ecological Applications, 19(1), 181–197.\n:::\n",
    "supporting": [
      "PseudoAbsenceData_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}